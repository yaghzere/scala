package ASCIIart

import org.scalatest.funsuite.AnyFunSuite
import org.scalatest.matchers.should.Matchers

class ASCIIartSuite extends AnyFunSuite with Matchers{


  val a1 = new ASCIIart(art1)
  val a2 = new ASCIIart(art2)

  test("Lecture et taille ok") {
    a1.largeur shouldEqual  4
    a1.hauteur shouldEqual  5

    a2.largeur shouldEqual  20
    a2.hauteur shouldEqual  11
  }

  test("Découpe des lettres - ok") {
    a1.tableLettre('a') shouldEqual List(" #  ", "# # ", "### ", "# # ", "# # ")
    a1.tableLettre('b') shouldEqual List("##  ", "# # ", "##  ", "# # ", "##  ")
    a1.tableLettre('z') shouldEqual List("### ", "  # ", " #  ", "#   ", "### ")

    a2.tableLettre('a') shouldEqual List(" .----------------. ", "| .--------------. |", "| |      __      | |", "| |     /  \\     | |", "| |    / /\\ \\    | |", "| |   / ____ \\   | |", "| | _/ /    \\ \\_ | |", "| ||____|  |____|| |", "| |              | |", "| '--------------' |", " '----------------' ")
    a2.tableLettre('b') shouldEqual List(" .----------------. ", "| .--------------. |", "| |   ______     | |", "| |  |_   _ \\    | |", "| |    | |_) |   | |", "| |    |  __'.   | |", "| |   _| |__) |  | |", "| |  |_______/   | |", "| |              | |", "| '--------------' |", " '----------------' ")
    a2.tableLettre('z') shouldEqual List(" .----------------. ", "| .--------------. |", "| |   ________   | |", "| |  |  __   _|  | |", "| |  |_/  / /    | |", "| |     .'.' _   | |", "| |   _/ /__/ |  | |", "| |  |________|  | |", "| |              | |", "| '--------------' |", " '----------------' ")

  }

  test("Découpe des lettres - KO") {
    a1.tableLettre('1') shouldEqual List("### ", "  # ", " ## ", "    ", " #  ")
    a1.tableLettre('$') shouldEqual List("### ", "  # ", " ## ", "    ", " #  ")

    a2.tableLettre('1') shouldEqual List(" .----------------. ", "| .--------------. |", "| |    ______    | |", "| |   / _ __ `.  | |", "| |  |_/____) |  | |", "| |    /  ___.'  | |", "| |    |_|       | |", "| |    (_)       | |", "| |              | |", "| '--------------' |", " '----------------' ")
    a2.tableLettre('$') shouldEqual List(" .----------------. ", "| .--------------. |", "| |    ______    | |", "| |   / _ __ `.  | |", "| |  |_/____) |  | |", "| |    /  ___.'  | |", "| |    |_|       | |", "| |    (_)       | |", "| |              | |", "| '--------------' |", " '----------------' ")
  }


  test("Mot") {
    a1("scala") shouldEqual " ##  ##  #  #    #  \n#   #   # # #   # # \n #  #   ### #   ### \n  # #   # # #   # # \n##   ## # # ### # # "
    a1("infoapp") shouldEqual "### ### ###  #   #  ##  ##  \n #  # # #   # # # # # # # # \n #  # # ##  # # ### ##  ##  \n #  # # #   # # # # #   #   \n### # # #    #  # # #   #   "

    a2("infoapp") shouldEqual " .----------------.  .-----------------. .----------------.  .----------------.  .----------------.  .----------------.  .----------------. \n| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |\n| |     _____    | || | ____  _____  | || |  _________   | || |     ____     | || |      __      | || |   ______     | || |   ______     | |\n| |    |_   _|   | || ||_   \\|_   _| | || | |_   ___  |  | || |   .'    `.   | || |     /  \\     | || |  |_   __ \\   | || |  |_   __ \\   | |\n| |      | |     | || |  |   \\ | |   | || |   | |_  \\_|  | || |  /  .--.  \\  | || |    / /\\ \\    | || |    | |__) |  | || |    | |__) |  | |\n| |      | |     | || |  | |\\ \\| |   | || |   |  _|      | || |  | |    | |  | || |   / ____ \\   | || |    |  ___/   | || |    |  ___/   | |\n| |     _| |_    | || | _| |_\\   |_  | || |  _| |_       | || |  \\  `--'  /  | || | _/ /    \\ \\_ | || |   _| |_      | || |   _| |_      | |\n| |    |_____|   | || ||_____|\\____| | || | |_____|      | || |   `.____.'   | || ||____|  |____|| || |  |_____|     | || |  |_____|     | |\n| |              | || |              | || |              | || |              | || |              | || |              | || |              | |\n| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |\n '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------' "
  }

}
